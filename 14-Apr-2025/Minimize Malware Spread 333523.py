# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        adj_list=[[] for _ in range(len(graph))]
        
        visted=set()
         
        # change to adj list
        for i in range(len(graph)):
            for j in range(len(graph)):

                if graph[i][j]==1 and i!=j:
                     
                    adj_list[i].append(j)
        def dfs(node,visted):
            visted.add(node)
            for  neighbor in adj_list[node]:
                if neighbor not in visted:
                    dfs(neighbor,visted)
        min_length=float('inf')
        initial=sorted(initial)
        result=initial[0]
        for i in initial:
            
            visted=set()
            for j in initial:
                
                if j != i and j not in visted:
                    dfs(j,visted)
                    print(i,j)
            if len(visted) < min_length:
                min_length=len(visted)
                result=i
        return result
